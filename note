
* stablecoins(0) is equal to USDT on current deployed contracts.

* Exchange contract uses hardcoded indexes to access elements in returned arrays from the router contract, thus our FakeRouter should return arrays that has the same length as initial 'path' passed by Exchange contract to our FakeRouter. Also getAmountIn in Exchange gets element at 0 index instead of last element like getAmountOut.  

List of swaps that Exchange contract should do (the information gathered by just looking in every place where Exchange contract is used by the protocol):

swapExactETHForTokens: Path should be changed in FakeRouter 
   matic -> WETH
   matic -> stackToken
   IT CALLS getAmountsOut !

swapExactTokensForETH: Path changed anyway, even though function unused
   unused

swapExactTokensForTokens: Path should be changed in FakeRouter 
   any stablecoin -> stackToken
   IT CALLS getAmountsOut !

getAmountIn: Path should be changed in FakeRouter 
   stablecoins(0) -> stackToken

getAmountOut: Path should be changed in FakeRouter
   stackToken -> stablecoins(0)
   stablecoins(0) -> stackToken
   also called by swap functions