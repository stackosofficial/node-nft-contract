{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xa5459A6de963265aA298213C413175893A33Ebd5",
      "txHash": "0xa5130b98e4a0c220bba411bff956160a63ce26e0534b5cba77cbdb6a2a269e59",
      "kind": "uups"
    }
  ],
  "impls": {
    "9dc6d888e04f93b88a1929cdc25e247c5bf56edcfc167dd170dfbef47cf6ead5": {
      "address": "0x0B8401305AdB75F0Ab3b7daA8f4dA15Ff231C5d1",
      "txHash": "0x938cdfd15496e1c75cb1c75b803528b91441ddcb0df5c7d8c291c39c034a19d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:42"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "Market",
            "label": "darkMatter",
            "type": "t_contract(DarkMatter)5045",
            "src": "contracts\\Market.sol:41"
          },
          {
            "contract": "Market",
            "label": "generations",
            "type": "t_contract(GenerationManager)6900",
            "src": "contracts\\Market.sol:42"
          },
          {
            "contract": "Market",
            "label": "daoAddress",
            "type": "t_address",
            "src": "contracts\\Market.sol:44"
          },
          {
            "contract": "Market",
            "label": "royaltyAddress",
            "type": "t_address",
            "src": "contracts\\Market.sol:45"
          },
          {
            "contract": "Market",
            "label": "daoFee",
            "type": "t_uint256",
            "src": "contracts\\Market.sol:49"
          },
          {
            "contract": "Market",
            "label": "royaltyFee",
            "type": "t_uint256",
            "src": "contracts\\Market.sol:50"
          },
          {
            "contract": "Market",
            "label": "stackToLot",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(StackLot)6980_storage))",
            "src": "contracts\\Market.sol:65"
          },
          {
            "contract": "Market",
            "label": "darkMatterToLot",
            "type": "t_mapping(t_uint256,t_struct(DarkMatterLot)6987_storage)",
            "src": "contracts\\Market.sol:66"
          }
        ],
        "types": {
          "t_contract(DarkMatter)5045": {
            "label": "contract DarkMatter"
          },
          "t_contract(GenerationManager)6900": {
            "label": "contract GenerationManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(StackLot)6980_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Market.StackLot))"
          },
          "t_mapping(t_uint256,t_struct(StackLot)6980_storage)": {
            "label": "mapping(uint256 => struct Market.StackLot)"
          },
          "t_struct(StackLot)6980_storage": {
            "label": "struct Market.StackLot",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "generationId",
                "type": "t_uint256"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_uint256,t_struct(DarkMatterLot)6987_storage)": {
            "label": "mapping(uint256 => struct Market.DarkMatterLot)"
          },
          "t_struct(DarkMatterLot)6987_storage": {
            "label": "struct Market.DarkMatterLot",
            "members": [
              {
                "label": "price",
                "type": "t_uint256"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              },
              {
                "label": "seller",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
